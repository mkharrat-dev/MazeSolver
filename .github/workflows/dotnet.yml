# name: .NET CI

# on:
#   push:
#     branches: [ main ]
#   pull_request:
#     branches: [ main ]

# jobs:
#   build-and-test:
#     runs-on: windows-latest

#     steps:
#     - name: Checkout repository
#       uses: actions/checkout@v3

#     - name: Setup .NET
#       uses: actions/setup-dotnet@v3
#       with:
#         dotnet-version: '8.0.x'

#     - name: Restore dependencies
#       run: dotnet restore

#     - name: 🛠️ Build solution
#       run: dotnet build --no-restore --configuration Release

#     - name: Run tests
#       run: dotnet test MazeSolver.Tests/MazeSolver.Tests.csproj --no-build --verbosity normal


name: .NET CI + SonarCloud (Windows)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-analyze:
    name: Build & SonarCloud (on Windows)
    runs-on: windows-latest

    steps:
    - name: 📥 Checkout source
      uses: actions/checkout@v3

    - name: 🧰 Setup .NET SDK
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '6.0.x'

    - name: 📦 Restore dependencies
      run: dotnet restore

    - name: 🧪 Install SonarScanner for .NET
      run: dotnet tool install --global dotnet-sonarscanner

    - name: ▶ Begin SonarCloud analysis
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        dotnet-sonarscanner begin /k:"mkharrat-dev_MazeSolver" /o:"mkharrat-dev" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /s:sonar-project.properties

    - name: 🛠️ Build solution
      run: dotnet build --no-restore --configuration Release

    - name: 🧪 Run tests with coverage
      run: dotnet test --no-build --collect:"XPlat Code Coverage"

    - name: 🛑 End SonarCloud analysis
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

